1. 
В C++11 добавили тонну нового функционала для генерации случайных чисел - разные виды генераторов(источник случайности, использует seed) случайных чисел. Доступ к ним осуществляется через подключение заголовочного файла random. Распределение - средство создание сч, использует гсч. Существует 16 генераторов. Каждый оперирует последовательностью случайных чисел. При создании нового - изменяется внутреннее состояние генератора. Начальное состояние можно закачать через seed, дальше - распределение. 

2. 
Ф.О. может иметь состояние, тк есть данные-члены. Полезны там, где по сути функция должна вести себя как объект. 
Ф.О. имеют свойство быть пересылаемыми и присваиваемыми, поскольку они объекты; обычные функции таким свойством не обладают.
Ф.О. это классы, каждый может имеет свой тип + может создавать разные экземпляры 
Ф.О. работает быстрее функции, переданной через указатель
У лямбды же есть захват и их удобно создавать на месте

3.
Input Iterator: 
=, !=, ==, ++, * -> для чтения
Output Iterator:
=, !=, ==, ++, * -> для записи
Forward Iterator:
II, OI, многопроходность (forward_list)
Bidirectionnel Iterator:
FI, --, (list, set)
Random Acuss Iterator:
BI, <, >, <=, >=, +/- n, i2-i1, [n] (vector)


4.
Немодифицирующие алгоритмы
Модифицирующие алгоритмы
Алгоритмы удаления
Алгоритмы перестановки 
Алгоритмы сортировки 
Для упорядоченных диапазонов
Численные

5.
Код выглядит более компактно и понятно. Стандартная библиотека C++ использует общую парадигму программирования. Результат очень элегантный (принцип DRY) и очень эффективный благодаря оптимизации компилятора, так что ручные алгоритмы для данного контейнера вряд ли будут работать лучше.


