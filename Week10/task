1.
	Все уровни:

Уровни модели OSI:
-Прикладной уровень  - обеспечивает взаимодействие пользовательских приложений с сетью

-Уровень представления - обеспечивает преобразование протоколов и кодирование/декодирование данных

-Сеансовый уровень - обеспечивает поддержание сеанса связи, позволяя приложениям взаимодействовать между собой длительное время

-Транспортный уровень -  предназначен для обеспечения надёжной передачи данных от отправителя к получателю.

-Сетевой уровень - предназначен для определения пути передачи данных

-Канальный уровень - предназначен для обеспечения взаимодействия сетей на физическом уровне и контроля ошибок, которые могут возникнуть

-Физический уровень - нижний уровень модели, который определяет метод передачи данных, представленных в двоичном виде, от одного устройства (компьютера) к другому.


2.
TCP
- надёжный, гарантирует доставку сообщений, обрабатывает ошибки
- Требует установки логического соединения
- режим соединения один с одним
- потокоорентирован, данные - поток байт

UDP
 - ненадёжный, нет гарантий доставки сообщений, нет error-fix
 - не требует установки логического соединения
 - один ко многим и один с одним 
 - ориентирован на сообщения 
 
 

3.
(IP, port) - точка доступа - можно отправить сообщение, зная эту пару; дает адрес
сокет - псевдофайл; к нему привязывается пара (IP, port)
	- UDP - socket
	- TCP - socket


4.
активные сокеты - читают, пишут - обмен данными после получения
пассивые сокеты - слушатель, принимает соединение
	(разделение нужно для гарантии надежности связи)


5. 
Клиент, устанавливающий соединение, посылает серверу сегмент с номером последовательности и флагом SYN.
Сервер получает сегмент, запоминает номер последовательности и пытается создать сокет для обслуживания нового клиента.
В случае успеха сервер посылает клиенту сегмент с номером последовательности и флагами SYN и ACK, и переходит в состояние SYN-RECEIVED.
В случае неудачи сервер посылает клиенту сегмент с флагом RST.

Если клиент получает сегмент с флагом SYN, то он запоминает номер последовательности и посылает сегмент с флагом ACK.
Если клиент одновременно получает и флаг ACK, то он переходит в состояние ESTABLISHED.
Если клиент получает сегмент с флагом RST, то он прекращает попытки соединиться.
Если клиент не получает ответа , то он повторяет процесс соединения заново.

Если сервер в состоянии SYN-RECEIVED получает сегмент с флагом ACK, то он переходит в состояние ESTABLISHED.
В противном случае после тайм-аута он закрывает сокет и переходит в состояние CLOSED.
