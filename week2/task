1.
std::pair - когда нужно 2 значения произвольных типов, предназначен для хранения пар 
Std::tuple - для более расширенной концепции пар, для произвольного кол-во элементов 

2.
Std::array - массив фиксированного размера, использовать, когда нужно задать длину во время компиляции и когда нужна более безопасная замена встроенного []

3.
Std::Vector - когда нужен динамический массив, улучшенная замена new[], 

4.
std::deque - двучстороння очередь, идеально подходит для операций вставок с двух концов (за о(1))

5.
Std::list - двусвязный список, подходит для вставки и удаления элементов в произвольное место за о(1), нет доступа по индексу(нет произвольного доступа), можно делать вставки, удаления

6.
Std::forward_list - односвязный список, для максимальной экономии памяти, даже нет size(), нужно учитывать, что нет size() только ортонаправленные операторы 

7.
Адаптеры контейнеров в стандартной библиотеке% stack (стек), queue (очередь), priority_queue (очередь с приоритетами). 

8.
circular buffer из Boost удобно использовать для хранения истории фиксированной длинны, когда поступают новые данные 

9.
circular buffer не может войти в STL, тк возможна ситуация, когда begin > end 

10.
Типы данных для работы с многомерными массивами Boost::multiarray(альтернатива для std::ralarray)